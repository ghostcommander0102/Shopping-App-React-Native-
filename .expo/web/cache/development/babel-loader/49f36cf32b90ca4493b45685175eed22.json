{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\project\\\\KHK\\\\recipes-app-react-native-v4.3\\\\recipes-app-react-native\\\\src\\\\screens\\\\Chat\\\\ChatScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { GiftedChat } from 'react-native-gifted-chat';\n\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen() {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var messages = this.state.messages;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(GiftedChat, {\n        messages: messages,\n        onSend: function onSend(message) {\n          _this2.setState(function (previousState) {\n            return {\n              messages: GiftedChat.append(previousState.messages, message)\n            };\n          });\n        },\n        user: {\n          _id: 1,\n          name: \"111\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ChatScreen;\n}(Component);\n\nexport { ChatScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'gray'\n  }\n});","map":{"version":3,"sources":["D:/project/KHK/recipes-app-react-native-v4.3/recipes-app-react-native/src/screens/Chat/ChatScreen.js"],"names":["React","Component","GiftedChat","ChatScreen","state","messages","styles","container","message","setState","previousState","append","_id","name","StyleSheet","create","flex","justifyContent","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,UAAT,QAA2B,0BAA3B;;IAEqBC,U;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;WAIR,6BAAoB,CAMnB;;;WAED,gCAAuB,CAEtB;;;WAED,kBAAS;AAAA;;AACL,UAAQA,QAAR,GAAqB,KAAKD,KAA1B,CAAQC,QAAR;AAEA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,QAAQ,EAAEF,QADd;AAEI,QAAA,MAAM,EAAE,gBAACG,OAAD,EAAa;AACjB,UAAA,MAAI,CAACC,QAAL,CAAc,UAAAC,aAAa;AAAA,mBAAK;AAC5BL,cAAAA,QAAQ,EAAEH,UAAU,CAACS,MAAX,CAAkBD,aAAa,CAACL,QAAhC,EAA0CG,OAA1C;AADkB,aAAL;AAAA,WAA3B;AAIH,SAPL;AAQI,QAAA,IAAI,EAAE;AACFI,UAAAA,GAAG,EAAE,CADH;AAEFC,UAAAA,IAAI,EAAE;AAFJ,SARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAiBH;;;;EArCmCZ,S;;SAAnBE,U;AAuCrB,IAAMG,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,eAAe,EAAE;AAHV;AADkB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\n\r\nexport default class ChatScreen extends Component {\r\n    state = {\r\n        messages: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        // api.loadMessages((message) => {\r\n        //   this.setState(previousState => ({\r\n        //     messages: GiftedChat.append(previousState.messages, message),\r\n        //   }));\r\n        // });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //api.closeChat();\r\n    }\r\n\r\n    render() {\r\n        const { messages } = this.state;\r\n        // const { name } = this.props.navigation.state;\r\n        return (\r\n            <View style={styles.container}>\r\n                <GiftedChat\r\n                    messages={messages}\r\n                    onSend={(message) => {\r\n                        this.setState(previousState => ({\r\n                            messages: GiftedChat.append(previousState.messages, message),\r\n                        }));\r\n                        //api.sendMessage(message);\r\n                    }}\r\n                    user={{\r\n                        _id: 1,\r\n                        name: \"111\",\r\n                    }}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        backgroundColor: 'gray',\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}