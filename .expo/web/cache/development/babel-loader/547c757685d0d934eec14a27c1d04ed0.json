{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { recipes, categories, ingredients, sub_categories } from \"./dataArrays\";\nexport function getCategoryById(categoryId) {\n  var category;\n  categories.map(function (data) {\n    data.children.map(function (data1) {\n      if (data1.id == categoryId) {\n        category = data1;\n      }\n    });\n  });\n  return category;\n}\nexport function getIngredientName(ingredientID) {\n  var name;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getIngredientUrl(ingredientID) {\n  var url;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\nexport function getCategoryName(categoryId) {\n  console.log(categoryId);\n  var name;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getRecipes(subCategoryId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.subcategoryId == subCategoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByIngredient(ingredientId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    data.ingredients.map(function (index) {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\nexport function getNumberOfSubCategories(categoryId) {\n  var count = 0;\n  sub_categories.map(function (data) {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getNumberOfRecipes(categoryId) {\n  var count = 0;\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getAllIngredients(idArray) {\n  var ingredientsArray = [];\n  idArray.map(function (index) {\n    ingredients.map(function (data) {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\nexport function getSubCategories(categoryId) {\n  var subCategoriesArray = [];\n  sub_categories.map(function (data) {\n    if (data.categoryId == categoryId) {\n      subCategoriesArray.push(data);\n    }\n  });\n  return subCategoriesArray;\n}\nexport function getRecipesByIngredientName(ingredientName) {\n  var nameUpper = ingredientName.toUpperCase();\n  var recipesArray = [];\n  ingredients.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes = getRecipesByIngredient(data.ingredientId);\n\n      var unique = _toConsumableArray(new Set(_recipes));\n\n      unique.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n\n  var uniqueArray = _toConsumableArray(new Set(recipesArray));\n\n  return uniqueArray;\n}\nexport function getRecipesByCategoryName(categoryName) {\n  var nameUpper = categoryName.toUpperCase();\n  var recipesArray = [];\n  categories.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes2 = getRecipes(data.id);\n\n      _recipes2.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByRecipeName(recipeName) {\n  var nameUpper = recipeName.toUpperCase();\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}","map":{"version":3,"sources":["D:/project/KHK/recipes-app-react-native-v4.3/recipes-app-react-native/src/data/MockDataAPI.js"],"names":["recipes","categories","ingredients","sub_categories","getCategoryById","categoryId","category","map","data","children","data1","id","getIngredientName","ingredientID","name","ingredientId","getIngredientUrl","url","photo_url","getCategoryName","console","log","getRecipes","subCategoryId","recipesArray","subcategoryId","push","getRecipesByIngredient","index","getNumberOfSubCategories","count","getNumberOfRecipes","getAllIngredients","idArray","ingredientsArray","getSubCategories","subCategoriesArray","getRecipesByIngredientName","ingredientName","nameUpper","toUpperCase","includes","unique","Set","item","uniqueArray","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName","title"],"mappings":"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","sourcesContent":["import { recipes, categories, ingredients, sub_categories } from './dataArrays';\n\nexport function getCategoryById(categoryId) {\n\tlet category;\n\tcategories.map(data => {\n\t\tdata.children.map(data1 => {\n\t\t\tif (data1.id == categoryId) {\n\t\t\t\tcategory = data1;\n\t\t\t}\n\t\t})\n\t\t\n\t});\n\treturn category;\n}\n\nexport function getIngredientName(ingredientID) {\n\tlet name;\n\tingredients.map(data => {\n\t\tif (data.ingredientId == ingredientID) {\n\t\t\tname = data.name;\n\t\t}\n\t});\n\treturn name;\n}\n\nexport function getIngredientUrl(ingredientID) {\n\tlet url;\n\tingredients.map(data => {\n\t\tif (data.ingredientId == ingredientID) {\n\t\t\turl = data.photo_url;\n\t\t}\n\t});\n\treturn url;\n}\n\nexport function getCategoryName(categoryId) {\n\tconsole.log(categoryId);\n\tlet name;\n\tcategories.map(data => {\n\t\tif (data.id == categoryId) {\n\t\t\tname = data.name;\n\t\t}\n\t});\n\treturn name;\n}\n\nexport function getRecipes(subCategoryId) {\n\tconst recipesArray = [];\n\trecipes.map(data => {\n\t\tif (data.subcategoryId == subCategoryId) {\n\t\t\trecipesArray.push(data);\n\t\t}\n\t});\n\treturn recipesArray;\n}\n\n// modifica\nexport function getRecipesByIngredient(ingredientId) {\n\tconst recipesArray = [];\n\trecipes.map(data => {\n\t\tdata.ingredients.map(index => {\n\t\t\tif (index[0] == ingredientId) {\n\t\t\t\trecipesArray.push(data);\n\t\t\t}\n\t\t});\n\t});\n\treturn recipesArray;\n}\n\nexport function getNumberOfSubCategories(categoryId) {\n\tlet count = 0;\n\tsub_categories.map(data => {\n\t\tif (data.categoryId == categoryId) {\n\t\t\tcount++;\n\t\t}\n\t});\n\treturn count;\n}\n\nexport function getNumberOfRecipes(categoryId) {\n\tlet count = 0;\n\trecipes.map(data => {\n\t\tif (data.categoryId == categoryId) {\n\t\t\tcount++;\n\t\t}\n\t});\n\treturn count;\n}\n\nexport function getAllIngredients(idArray) {\n\tconst ingredientsArray = [];\n\tidArray.map(index => {\n\t\tingredients.map(data => {\n\t\t\tif (data.ingredientId == index[0]) {\n\t\t\t\tingredientsArray.push([data, index[1]]);\n\t\t\t}\n\t\t});\n\t});\n\treturn ingredientsArray;\n}\n\nexport function getSubCategories(categoryId) {\n\tconst subCategoriesArray = [];\n\tsub_categories.map(data => {\n\t\tif (data.categoryId == categoryId) {\n\t\t\tsubCategoriesArray.push(data);\n\t\t}\n\t});\n\treturn subCategoriesArray;\n}\n\n\n// functions for search\nexport function getRecipesByIngredientName(ingredientName) {\n\tconst nameUpper = ingredientName.toUpperCase();\n\tconst recipesArray = [];\n\tingredients.map(data => {\n\t\tif (data.name.toUpperCase().includes(nameUpper)) {\n\t\t\t// data.name.yoUpperCase() == nameUpper\n\t\t\tconst recipes = getRecipesByIngredient(data.ingredientId);\n\t\t\tconst unique = [...new Set(recipes)];\n\t\t\tunique.map(item => {\n\t\t\t\trecipesArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\tconst uniqueArray = [...new Set(recipesArray)];\n\treturn uniqueArray;\n}\n\nexport function getRecipesByCategoryName(categoryName) {\n\tconst nameUpper = categoryName.toUpperCase();\n\tconst recipesArray = [];\n\tcategories.map(data => {\n\t\tif (data.name.toUpperCase().includes(nameUpper)) {\n\t\t\tconst recipes = getRecipes(data.id); // return a vector of recipes\n\t\t\trecipes.map(item => {\n\t\t\t\trecipesArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\treturn recipesArray;\n}\n\nexport function getRecipesByRecipeName(recipeName) {\n\tconst nameUpper = recipeName.toUpperCase();\n\tconst recipesArray = [];\n\trecipes.map(data => {\n\t\tif (data.title.toUpperCase().includes(nameUpper)) {\n\t\t\trecipesArray.push(data);\n\t\t}\n\t});\n\treturn recipesArray;\n}\n"]},"metadata":{},"sourceType":"module"}