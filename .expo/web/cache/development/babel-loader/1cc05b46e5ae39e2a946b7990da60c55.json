{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { GETPRODUCT_URL, GETPRODUCTS_URL } from \"../utils/api\";\nimport { GET_PRODUCT, GET_PRODUCTS, CLEAR_PRODUCT, PRODUCT_ERROR, PRODUCT_LOADING } from \"./types\";\nexport var getProducts = function getProducts(formData) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: CLEAR_PRODUCT\n            });\n            dispatch({\n              type: PRODUCT_LOADING\n            });\n            _context.prev = 2;\n            return _context.abrupt(\"return\", fetch(GETPRODUCTS_URL, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                \"x-auth-token\": formData.token\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (json) {\n              if (json.hasOwnProperty('error')) {} else {\n                dispatch({\n                  type: GET_PRODUCTS,\n                  payload: json\n                });\n              }\n            }).catch(function (error) {\n              dispatch({\n                type: PRODUCT_ERROR\n              });\n            }));\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](2);\n            dispatch({\n              type: PRODUCT_ERROR,\n              payload: {\n                msg: _context.t0.response.statusText,\n                status: _context.t0.response.status\n              }\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 6]], Promise);\n  };\n};\nexport var getProduct = function getProduct(formData) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: CLEAR_PRODUCT\n            });\n            dispatch({\n              type: PRODUCT_LOADING\n            });\n            _context2.prev = 2;\n            return _context2.abrupt(\"return\", fetch(GETPRODUCT_URL, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                \"x-auth-token\": formData.token\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (json) {\n              if (json.hasOwnProperty('error')) {} else {\n                dispatch({\n                  type: GET_PRODUCT,\n                  payload: json\n                });\n              }\n            }).catch(function (error) {\n              dispatch({\n                type: PRODUCT_ERROR\n              });\n            }));\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](2);\n            dispatch({\n              type: PRODUCT_ERROR,\n              payload: {\n                msg: _context2.t0.response.statusText,\n                status: _context2.t0.response.status\n              }\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 6]], Promise);\n  };\n};","map":{"version":3,"sources":["D:/project/KHK/recipes-app-react-native-v4.3/recipes-app-react-native/src/actions/product.js"],"names":["GETPRODUCT_URL","GETPRODUCTS_URL","GET_PRODUCT","GET_PRODUCTS","CLEAR_PRODUCT","PRODUCT_ERROR","PRODUCT_LOADING","getProducts","formData","dispatch","type","fetch","method","headers","token","then","response","json","hasOwnProperty","payload","catch","error","msg","statusText","status","getProduct"],"mappings":"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","sourcesContent":["import { GETPRODUCT_URL, GETPRODUCTS_URL } from \"../utils/api\";\r\nimport { GET_PRODUCT, GET_PRODUCTS, CLEAR_PRODUCT, PRODUCT_ERROR, PRODUCT_LOADING } from \"./types\";\r\n\r\nexport const getProducts = (formData) => async (dispatch) => {\r\n    dispatch({ type: CLEAR_PRODUCT });\r\n    dispatch({ type: PRODUCT_LOADING});\r\n    try {\r\n        return fetch(GETPRODUCTS_URL, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type' : 'application/json',\r\n\t\t\t\t\"x-auth-token\": formData.token\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n        .then(json => {\r\n            if(json.hasOwnProperty('error')){\r\n\t\t\t}\r\n            else {\r\n                dispatch({\r\n                    type: GET_PRODUCTS,\r\n                    payload: json\r\n                });\r\n\t\t\t}\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n\t\t\t\ttype: PRODUCT_ERROR\r\n\t\t\t});\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProduct = (formData) => async (dispatch) => {\r\n    dispatch({ type: CLEAR_PRODUCT });\r\n    dispatch({ type: PRODUCT_LOADING});\r\n    try {\r\n        return fetch(GETPRODUCT_URL, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type' : 'application/json',\r\n\t\t\t\t\"x-auth-token\": formData.token\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n        .then(json => {\r\n            if(json.hasOwnProperty('error')){\r\n\t\t\t}\r\n            else {\r\n                dispatch({\r\n                    type: GET_PRODUCT,\r\n                    payload: json\r\n                });\r\n\t\t\t}\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n\t\t\t\ttype: PRODUCT_ERROR\r\n\t\t\t});\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}